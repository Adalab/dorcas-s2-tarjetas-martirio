'use strict';

// CODIGO DE RECOGIDA DE DATOS DEL FORMULARIO //

// JS PARA recoger datos //

var form_email;
var form_tfn;
var form_lk;
var form_gh;

function changeCard() {
  // cambio el enlace del email de la vista previa //

  var j = document.querySelector('.email_button');
  j.href = 'mailto:' + form_email;

  // cambio el enlace de telefono //

  var m = document.querySelector('.tfn_button');
  m.href = 'tel:' + form_tfn;


  // cambio el enlace de linkedin de la vista previa //

  var z = document.querySelector('.linkedin_button');
  z.href = form_lk;

  // cambio el enlace de github de la vista previa //

  var w = document.querySelector('.github_button');
  w.href = form_gh;
}


function saveData() {

  // guardo email //
  var catch_email = document.querySelector('#email');

  form_email = catch_email.value;



  // guardo telefono //
  var catch_tfn = document.querySelector('#telefono');

  form_tfn = catch_tfn.value;



  // guardo linkedin //
  var catch_lk = document.querySelector('#linkedin');

  form_lk = catch_lk.value;


  // guardo github //
  var catch_gh = document.querySelector('#github');

  form_gh = catch_gh.value;


  changeCard();
}



var create_card_button = document.querySelector(".submit");
create_card_button.addEventListener('click', saveData);

//form diseña
var radio = document.querySelector("form__subtitle__first-color");

var inputNombre = document.querySelector(".form__input--nombre");
var inputPuesto = document.querySelector(".form__input--puesto");

function writeData(event) {
  var campoModificado = event.currentTarget;
  var targetID = campoModificado.getAttribute("data-donde");
  document.querySelector("#" + targetID).innerHTML = campoModificado.value;
}

inputNombre.addEventListener("keyup", writeData);
inputPuesto.addEventListener("keyup", writeData);

//a parte de esto, modificar los data-id de los input y los id de los campos del preview de nombre y puesto

var colapsables = document.querySelectorAll('.colapsable');
var tituloColapsable = document.querySelectorAll('.titulo-colapsable');

function actualizarColapsable(event) {
  //cogemos todas flechas, esto nos devuelve el grupo de flechas como un array
  var turnArrow = document.querySelectorAll('.turn-arrow');
  var contenedor = event.currentTarget.parentElement;
  //en el html ponemos un data-donde a todos los elementos suceptibles de ser clikados, y recogemos el valor del data donde. los valores del data donde van a hacer match con los valores del array
  var clikedID = contenedor.getAttribute('data-donde');
  if (contenedor.classList.contains('colapsable--visible')) {
    contenedor.classList.remove('colapsable--visible');
    turnArrow[clikedID].classList.remove('arrow-down');
  } else {
    contenedor.classList.add('colapsable--visible');
    turnArrow[clikedID].classList.add('arrow-down');
    }
  }
//cogemos la flecha cuya posicion en el array sea igual al data-donde del elemento clikado y le quitamos y le ponemos la clase que la hace girar.
for (var i = 0; i < tituloColapsable.length; i++) {
  tituloColapsable[i].addEventListener('click', actualizarColapsable);
}

//color radio buttom\
var preview = document.querySelector('.preview');
var colorsP = document.querySelectorAll('.radio-color');
//una clase -try- para dominarlos a todos

function changeColors (event){
  var guiltyElement = event.currentTarget;
  var state = guiltyElement.checked;
  var targetID = guiltyElement.getAttribute('data-donde');
  if (state === true) {
    preview.classList.remove('greenTarget', 'greyTarget','redTarget');
    preview.classList.add(targetID);
  }
 
}
for (var i = 0; i < colorsP.length; i++) {
  colorsP[i].addEventListener('click', changeColors);
}

//font radio buttom

var state;
var fontsP = document.querySelectorAll('.radio-font');
//una clase -radio-font- para dominarlos a todos
function changeFonts (event){
  var guiltyElement = event.currentTarget;
  var state = guiltyElement.checked;
  var targetID = guiltyElement.getAttribute('data-donde');
  if (state === true) {
    preview.classList.remove('comicFont', 'montFont','ubuntuFont');
    preview.classList.add(targetID);
  }
 
}
for (var i = 0; i < fontsP.length; i++) {
  fontsP[i].addEventListener('click', changeFonts );
}



'use strict';


// CODIGO JS PARA AÑADIR IMAGEN

// No hacer caso a la línea del FileReader, como en el mago de oz con el tipo de la cortina :)
var fr = new FileReader();

// Caso a partir de aquí :)
var uploadBtn = document.querySelector('.action__upload-btn');

var fileField = document.querySelector('#img-selector');
var profileImage = document.querySelector('.profile-image__item');

var imagePreview = document.querySelector('.changeImagePreview');

function getImage(e) {
  var myFile = e.currentTarget.files[0];
  fr.addEventListener('load', writeImage);
  fr.readAsDataURL(myFile);
}

function writeImage() {
  profileImage.src = fr.result;
  imagePreview.src = fr.result;
}

function fakeFileClick() {
  fileField.click();
}

fileField.addEventListener('change', getImage);
uploadBtn.addEventListener('click', fakeFileClick);


// aqui acaba el codigo JS para añadir imagen

'use strict';

/// CODIGO SKILLS //
var tagsContainer = document.querySelector('.etiquetas-habilidades-container');
var button = document.querySelector('.button');
var divMadre = document.getElementById('mama');
var arraySkills = [];
var selectSkills;
var contadorClases = 1;
var container;
var buttonRemove;
var optionAsPlaceholderText = 'Elige habilidad';
var currentListOfSelects;
/////////////// FETCH PARA RECOGER LOS SKILLS DEL SERVIDOR /////////////////////////////

function searchArray() {
  fetch('https://raw.githubusercontent.com/Adalab/dorcas-s2-proyecto-data/master/skills.json')
    .then(function (response) {
      return response.json();
    })
    .then(function (json) {

      arraySkills = json.skills;
      arraySkills.push(optionAsPlaceholderText);
      arraySkills.reverse();
    });
}


/////////////// FIN FETCH PARA RECOGER LOS SKILLS DEL SERVIDOR /////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
//// CODIGO SKILLS //

function eliminaUltimoDiv() {

  if (contadorClases > 2) {
    var k = event.currentTarget.parentElement;
    k.parentElement.removeChild(k);
    button.classList.remove('hidden'); //Quita la clase Hidden si hay menos de 3 opciones para que aparezca el +
    contadorClases--;

    updateTagList();
  } else {
    alert("Tiene que introducir alguna habilidad");
  }
}

function createRemoveButton() {
  buttonRemove = document.createElement('button');
  buttonRemove.setAttribute("type", "button");
  var insertMinus = document.createTextNode('-');
  buttonRemove.appendChild(insertMinus);
  container.appendChild(buttonRemove);
  buttonRemove.classList.add('buttonRemove');
  buttonRemove.addEventListener('click', eliminaUltimoDiv);
}

function changeSkills() {
  //creo una etiqueta select//
  selectSkills = document.createElement('select');
  selectSkills.setAttribute('name', 'hola');
  selectSkills.classList.add("form__select");
  container.appendChild(selectSkills);

  //bucle para rellenar el select con tantos options como colores haya en el arrayColors//
  for (var i = 0; i < arraySkills.length; i++) {
    //creamos el elemento option//
    var option = document.createElement('option');
    //creamos el texto de dentro del option, en este caso lo rellenamos con los strings que hay en arraySkills//
    var insertSkillToOption = document.createTextNode(arraySkills[i]);
    //Metemos los Strings dentro de los options//
    option.appendChild(insertSkillToOption);
    // metemoslos options dentro de los select//
    selectSkills.appendChild(option);
    selectSkills.addEventListener('change', updateTagList);
  }
}

function createDiv() {

  if (contadorClases < 3) {
    //creo un div//
    container = document.createElement('div');
    container.classList.add('container');
    divMadre.appendChild(container);
    changeSkills();
    createRemoveButton();
    contadorClases++;
  } else if (contadorClases === 3) {
    button.classList.add('hidden');

    container = document.createElement('div');
    container.classList.add('container');
    divMadre.appendChild(container);

    changeSkills();
    createRemoveButton();

    contadorClases++;
  } else {
    alert('Tiene que introducir alguna habilidad');
  }
}

searchArray();
button.addEventListener('click', createDiv);

////////////// AÑADIR A LA TARJETA ///////////////////


function updateTagList() {
  currentListOfSelects = document.querySelectorAll('.form__select');
  console.log(currentListOfSelects);
  tagsContainer.innerHTML = ''; //limpio los skills del preview

  for (var i = 0; i < currentListOfSelects.length; i++) {
    var currentSelect = currentListOfSelects[i];
    if (currentSelect.value !== optionAsPlaceholderText) {
      tagsContainer.innerHTML += '<li class="etiqueta-habilidad">' + currentSelect.value + '</li>';
    }
  }
  console.log(currentListOfSelects);
}


//////////////////////////////////////////////////////////////////////////////////////
////////// ENVIO AL SERVIDOR /////////////////////////////////////////////////////////

var submitButton = document.querySelector('#submit');
var responseURL = document.querySelector('.response');
var form = document.querySelector('form');
var fr = new FileReader();

submitButton.addEventListener('click', loadPhoto);

function sendData() {
  var inputs = Array.from(form.elements);
  var json = getJSONFromInputs(inputs);
  json.skills = [];
  console.log(json);
  for (var i = 0; i < currentListOfSelects.length; i++) {

    json.skills.push(currentListOfSelects[i].value);
  }

  json.photo = fr.result;
  sendRequest(json);
}

function loadPhoto() {

  var myFile = document.querySelector('#img-selector').files[0];
  fr.addEventListener('load', sendData);
  fr.readAsDataURL(myFile);
}

function getJSONFromInputs(inputs) {
  return inputs.reduce(function (acc, val) {
    if (val.nodeName !== 'BUTTON' && val.nodeName !== 'FIELDSET') {
      acc[val.name] = val.value;
    }
    return acc;
  }, {});
}


function sendRequest(json) {
  fetch('https://us-central1-awesome-cards-cf6f0.cloudfunctions.net/card/', {
      method: 'POST',
      body: JSON.stringify(json),
      headers: {
        'content-type': 'application/json'
      },
    })
    .then(function (resp) {
      return resp.json();
    })
    .then(function (result) {
      showURL(result);
    })
    .catch(function (error) {
      console.log(error);
    });
}

function showURL(result) {
  if (result.success) {
    responseURL.innerHTML = '<a href=' + result.cardURL + '>' + result.cardURL + '</a>';
  } else {
    responseURL.innerHTML = 'ERROR:' + result.error;
  }
}

//# sourceMappingURL=main.min.js.map
